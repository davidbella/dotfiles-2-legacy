# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show run -kb-row-select "Tab" -kb-row-tab "" -m $(swaymsg -t get_outputs | jq 'map(select(.active) | .focused) | reverse | index(true)') -run-command 'swaymsg exec -- {cmd}'
# Lock screen
set $lock bin/lock.sh
# Power menu
set $power $HOME/.config/wofi/power


### Output configuration
#
# Default wallpaper
output * bg ~/.config/backgrounds/pixel-sea.jpg fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# output eDP-1 {
    # background ~/.config/backgrounds/pixel-sea.jpg fill
    # resolution 3200x1800
    # position 320,1020
# }

# output DP-3 {
    # background ~/.config/backgrounds/pixel-sea.jpg fill
    # resolution 1920x1080
    # position 1920,0
    # transform 270
# }

### Idle configuration
#
# Example configuration:
#
exec swayidle \
         timeout 1200 'exec $lock' \
         timeout 2400 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'exec $lock'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

smart_borders on
focus_follows_mouse no
titlebar_border_thickness 0
title_align center

### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
#
# Does not work
# set $input "$(swaymsg -t get_inputs | jq 'map(select(.type == "touchpad")) | map(.identifier) | first')"
#
# Old:XPS13
# set $input "1739:30383:DLL075B:01_06CB:76AF_Touchpad"

# Seems to work fine targeting ALL inputs - might not work with a mouse
set $input *

input $input {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}
input * repeat_delay 270
input * repeat_rate 48

set $wsg 0:
set $ws1 1:1
set $ws2 2:2
set $ws3 3:3
set $ws4 4:4
set $ws5 5:5
set $ws6 6:6
set $ws7 7:7
set $ws8 8:8
set $ws9 9:9
set $ws10 10:

set $exm "BenQ Corporation BenQ XL2411Z 93G01355SL0"

workspace $wsg output eDP-1
workspace $ws1 output $exm
workspace $ws2 output $exm
workspace $ws3 output $exm
workspace $ws4 output $exm
workspace $ws5 output $exm
workspace $ws6 output $exm
workspace $ws7 output $exm
workspace $ws8 output eDP-1
workspace $ws9 output eDP-1
workspace $ws10 output eDP-1

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Launch Firefox
    bindsym $mod+f exec firefox

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Lock the screen
    bindsym Ctrl+$mod+l exec $lock

    # Start greenclip clipboard manager
    bindsym Ctrl+Shift+c exec rofi -modi "clipboard:greenclip print" -show clipboard -run-command -m -1

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+q exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Power menu
    bindsym $mod+Escape exec $power
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+grave workspace $wsg
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # Move focused container to workspace
    bindsym $mod+Shift+grave move container to workspace $wsg
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

bindsym XF86MonBrightnessUp exec "sudo bright_up.sh"
bindsym XF86MonBrightnessDown exec "sudo bright_down.sh"
bindsym XF86AudioRaiseVolume exec "amixer sset Master 5%+"
bindsym XF86AudioLowerVolume exec "amixer sset Master 5%-"
bindsym XF86AudioMute exec "amixer set Master 1+ toggle"

bindswitch lid:on output eDP-1 disable
bindswitch lid:off output eDP-1 enable

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
    # position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
        # statusline #ffffff
        # background #323232
        # focused_workspace #32323200 #32323200 #ffffff
        # inactive_workspace #323232 #323232 #9c9c9c
    # }
# }

exec_always ~/.config/waybar/launch.sh

include /etc/sway/config.d/*
